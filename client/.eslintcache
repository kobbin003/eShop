[{"/home/kobin/Documents/coding/eShop/client/src/index.js":"1","/home/kobin/Documents/coding/eShop/client/src/App.js":"2","/home/kobin/Documents/coding/eShop/client/src/reportWebVitals.js":"3","/home/kobin/Documents/coding/eShop/client/src/store/store.js":"4","/home/kobin/Documents/coding/eShop/client/src/components/Footer.js":"5","/home/kobin/Documents/coding/eShop/client/src/components/PageNotFound.js":"6","/home/kobin/Documents/coding/eShop/client/src/screens/HomeScreen.js":"7","/home/kobin/Documents/coding/eShop/client/src/screens/RegisterScreen.js":"8","/home/kobin/Documents/coding/eShop/client/src/screens/LoginScreen.js":"9","/home/kobin/Documents/coding/eShop/client/src/screens/CartScreen.js":"10","/home/kobin/Documents/coding/eShop/client/src/screens/ProfileScreen.js":"11","/home/kobin/Documents/coding/eShop/client/src/components/Header.js":"12","/home/kobin/Documents/coding/eShop/client/src/screens/PaymentScreen.js":"13","/home/kobin/Documents/coding/eShop/client/src/screens/Checkout.js":"14","/home/kobin/Documents/coding/eShop/client/src/screens/PlaceOrderScreen.js":"15","/home/kobin/Documents/coding/eShop/client/src/screens/ShippingScreen.js":"16","/home/kobin/Documents/coding/eShop/client/src/Route/PrivateRoute.js":"17","/home/kobin/Documents/coding/eShop/client/src/Route/PrivateRouteInside.js":"18","/home/kobin/Documents/coding/eShop/client/src/screens/ProductScreen.js":"19","/home/kobin/Documents/coding/eShop/client/src/screens/OrderScreen.js":"20","/home/kobin/Documents/coding/eShop/client/src/components/Product.js":"21","/home/kobin/Documents/coding/eShop/client/src/components/Alert.js":"22","/home/kobin/Documents/coding/eShop/client/src/components/Profile.js":"23","/home/kobin/Documents/coding/eShop/client/src/screens/CheckoutSteps.js":"24","/home/kobin/Documents/coding/eShop/client/src/components/Rating.js":"25","/home/kobin/Documents/coding/eShop/client/src/reducers/rootReducer.js":"26","/home/kobin/Documents/coding/eShop/client/src/actions/productListAction.js":"27","/home/kobin/Documents/coding/eShop/client/src/actions/cartAction.js":"28","/home/kobin/Documents/coding/eShop/client/src/actions/authAction.js":"29","/home/kobin/Documents/coding/eShop/client/src/actions/alertAction.js":"30","/home/kobin/Documents/coding/eShop/client/src/actions/orderAction.js":"31","/home/kobin/Documents/coding/eShop/client/src/constants/type.js":"32","/home/kobin/Documents/coding/eShop/client/src/reducers/alertReducers.js":"33","/home/kobin/Documents/coding/eShop/client/src/reducers/authReducer.js":"34","/home/kobin/Documents/coding/eShop/client/src/reducers/productListReducer.js":"35","/home/kobin/Documents/coding/eShop/client/src/reducers/orderReducers.js":"36","/home/kobin/Documents/coding/eShop/client/src/reducers/cartReducer.js":"37","/home/kobin/Documents/coding/eShop/client/src/reducers/productReducer.js":"38","/home/kobin/Documents/coding/eShop/client/src/utils/starFiller.js":"39"},{"size":532,"mtime":1675436191000,"results":"40","hashOfConfig":"41"},{"size":3558,"mtime":1675228660276,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1675228660280,"results":"43","hashOfConfig":"41"},{"size":1253,"mtime":1675228660280,"results":"44","hashOfConfig":"41"},{"size":456,"mtime":1675228660280,"results":"45","hashOfConfig":"41"},{"size":596,"mtime":1675228660280,"results":"46","hashOfConfig":"41"},{"size":2333,"mtime":1675228660280,"results":"47","hashOfConfig":"41"},{"size":1468,"mtime":1675228660280,"results":"48","hashOfConfig":"41"},{"size":2438,"mtime":1675228660280,"results":"49","hashOfConfig":"41"},{"size":3955,"mtime":1675228660280,"results":"50","hashOfConfig":"41"},{"size":1397,"mtime":1675228660280,"results":"51","hashOfConfig":"41"},{"size":3299,"mtime":1675228660280,"results":"52","hashOfConfig":"41"},{"size":2038,"mtime":1675228660280,"results":"53","hashOfConfig":"41"},{"size":1121,"mtime":1675228660280,"results":"54","hashOfConfig":"41"},{"size":5210,"mtime":1675228660280,"results":"55","hashOfConfig":"41"},{"size":3056,"mtime":1675228660280,"results":"56","hashOfConfig":"41"},{"size":1178,"mtime":1675228660276,"results":"57","hashOfConfig":"41"},{"size":435,"mtime":1675228660276,"results":"58","hashOfConfig":"41"},{"size":4956,"mtime":1675228660280,"results":"59","hashOfConfig":"41"},{"size":6029,"mtime":1675228660280,"results":"60","hashOfConfig":"41"},{"size":872,"mtime":1675228660280,"results":"61","hashOfConfig":"41"},{"size":498,"mtime":1675228660280,"results":"62","hashOfConfig":"41"},{"size":2310,"mtime":1675228660280,"results":"63","hashOfConfig":"41"},{"size":1272,"mtime":1675228660280,"results":"64","hashOfConfig":"41"},{"size":614,"mtime":1675228660280,"results":"65","hashOfConfig":"41"},{"size":598,"mtime":1675228660280,"results":"66","hashOfConfig":"41"},{"size":1666,"mtime":1675431579129,"results":"67","hashOfConfig":"41"},{"size":1832,"mtime":1675228660276,"results":"68","hashOfConfig":"41"},{"size":3955,"mtime":1675228660276,"results":"69","hashOfConfig":"41"},{"size":278,"mtime":1675228660276,"results":"70","hashOfConfig":"41"},{"size":2011,"mtime":1675228660276,"results":"71","hashOfConfig":"41"},{"size":1666,"mtime":1675228660280,"results":"72","hashOfConfig":"41"},{"size":502,"mtime":1675228660280,"results":"73","hashOfConfig":"41"},{"size":1059,"mtime":1675228660280,"results":"74","hashOfConfig":"41"},{"size":613,"mtime":1675228660280,"results":"75","hashOfConfig":"41"},{"size":1348,"mtime":1675228660280,"results":"76","hashOfConfig":"41"},{"size":1737,"mtime":1675228660280,"results":"77","hashOfConfig":"41"},{"size":603,"mtime":1675228660280,"results":"78","hashOfConfig":"41"},{"size":588,"mtime":1675228660280,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vihb2c",{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},"/home/kobin/Documents/coding/eShop/client/src/index.js",[],"/home/kobin/Documents/coding/eShop/client/src/App.js",["176","177"],"import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport Container from \"react-bootstrap/Container\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport PrivateRoute from \"./Route/PrivateRoute\";\nimport PrivateRouteInside from \"./Route/PrivateRouteInside\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport Checkout from \"./screens/Checkout\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nfunction App() {\n  // const state = store.getState();\n  // const { authUser } = useSelector((state) => state);\n  // console.log(\"state\", state);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <main>\n          <Container className=\"px-0 py-2\">\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route exact path=\"/product/:id\" component={ProductScreen} />\n              <Route exact path=\"/cart/:id?\" component={CartScreen} />\n              {/* id? --> means it is optional. */}\n              <PrivateRouteInside exact path=\"/login\" component={LoginScreen} />\n              {/* /** OR (no nedd to make a separate PrivateRoute.js file) */}\n              {/* <Route exact path=\"/register\">\n                  {state.authUser.user.token ? (\n                    <Redirect to=\"/\" />\n                  ) : (\n                    <RegisterScreen />\n                  )}\n                </Route> */}\n              <Route exact path=\"/register\">\n                <RegisterScreen />\n              </Route>\n              <PrivateRoute exact path=\"/profile\" component={ProfileScreen} />\n\n              <PrivateRoute exact path=\"/shipping\" component={ShippingScreen} />\n              {/* OR */}\n              {/* /** With this way of using Route, you cannot access props such as history, params etc.\n                        You have to use hooks i.e useHistory, useParams etc. to consume those props. */}\n              {/* <Route exact path=\"/shipping\">\n                {state.authUser.user.token ? (\n                  <ShippingScreen />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )}\n              </Route> */}\n              <PrivateRoute exact path=\"/payment\" component={PaymentScreen} />\n              {/* <PaymentScreen />\n              </PrivateRoute> */}\n              <PrivateRoute\n                exact\n                path=\"/placeOrder\"\n                component={PlaceOrderScreen}\n              />\n              <PrivateRoute exact path=\"/order/:id\" component={OrderScreen} />\n              {/* <PlaceOrderScreen />\n              </PrivateRoute> */}\n              {/* <Route exact path=\"/checkout\" component={Checkout} /> */}\n              <Route component={PageNotFound} />\n            </Switch>\n          </Container>\n        </main>\n        <Footer />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/kobin/Documents/coding/eShop/client/src/reportWebVitals.js",[],"/home/kobin/Documents/coding/eShop/client/src/store/store.js",[],"/home/kobin/Documents/coding/eShop/client/src/components/Footer.js",[],"/home/kobin/Documents/coding/eShop/client/src/components/PageNotFound.js",[],"/home/kobin/Documents/coding/eShop/client/src/screens/HomeScreen.js",["178","179","180"],"import React, { useState, useEffect } from \"react\";\nimport Product from \"../components/Product\";\n// import products from \"../products\";\n// import axios from \"axios\";\nimport { getProducts } from \"../actions/productListAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Alert, Spinner } from \"react-bootstrap\";\nimport { Fragment } from \"react\";\nconst HomeScreen = () => {\n  //   const [scrolledY, setScrolled] = useState(100);\n  // console.log(\"document\", document);\n  // const [products, setProducts] = useState([]);\n  const dispatch = useDispatch();\n  const { products, error, loading } = useSelector(\n    (state) => state.productList\n  );\n  /** oncomponentMount */\n  useEffect(() => {\n    // window.scrollBy(0, localStorage.getItem(\"homeScreenY\"));\n    /** using-fetch */\n    // const fetchData = async () => {\n    //   const response = await fetch(\"/api/products\");\n    //   const data = await response.json();\n    //   setProducts(data);\n    //   console.log(data);\n    // };\n    // fetchData();\n\n    /** axios */\n    // const fetchData = async () => {\n    //   const config = { method: \"get\", url: \"/api/products\" };\n    //   const { data } = await axios(config);\n    //   setProducts(data);\n    // };\n    // fetchData();\n\n    /** on component Unmount */\n    // return () => {\n    //   // localStorage.setItem(\"homeScreenY\", scrolledY);\n    //   window.removeEventListener(\"scroll\", handleScroll);\n    // };\n    /** actions */\n    dispatch(getProducts());\n    // setProducts(value.products);\n  }, []);\n  return (\n    <div className=\"homeScreenContainer\">\n      <h1 className=\"py-2\">LATEST PRODUCTS</h1>\n      {loading ? (\n        // <h2>loading...</h2>\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n          <Spinner animation=\"border\" role=\"status\" className=\"mr-3\" />\n          Loading...\n        </div>\n      ) : error ? (\n        // <h2>{error.message}</h2>\n        <Alert variant=\"danger\">{error.message}</Alert>\n      ) : (\n        <div className=\"card-grid\">\n          {products.length > 1 &&\n            products.map((product, index) => (\n              <div key={index}>\n                <Product product={product} />\n              </div>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n// sm={12} md={6} lg={4} xl={3}\nexport default HomeScreen;\n","/home/kobin/Documents/coding/eShop/client/src/screens/RegisterScreen.js",["181","182","183","184","185"],"import React, { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { Button, Form, Alert } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setAlert } from \"../actions/alertAction\";\nimport { registerUser } from \"../actions/authAction\";\nimport Profile from \"../components/Profile\";\n\nconst RegisterScreen = ({ history }) => {\n  const {\n    alert: { alerts },\n  } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  /** handle submit */\n  /** this is how to pass multiple parameters with 'e' object */\n  const handleSubmit = ({ name, email, password, confirmPassword }) => {\n    // const { name, email, password } = registrationInfo;\n    if (password === confirmPassword) {\n      /** post registration */\n      dispatch(registerUser(name, email, password, history));\n      /** go to \"/\" */\n      // history.push(\"/\");\n      // console.log({ name, email, password });\n    } else {\n      dispatch(setAlert(\"passwords does not match\", \"danger\"));\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1>SIGN UP</h1>\n      {/* {alerts &&\n        alerts.map((alert,index) => (\n          <Alert key={index} variant={alert.variant}>{alert.msg}</Alert>\n        ))} */}\n      <Profile handleSubmit={handleSubmit} componentType=\"REGISTER\" />\n      <p>\n        Have an Account? <Link to=\"/login\">Login</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nexport default RegisterScreen;\n","/home/kobin/Documents/coding/eShop/client/src/screens/LoginScreen.js",["186"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUser, loginUser } from \"../actions/authAction\";\nimport AlertMessage from \"../components/Alert\";\n\nconst LoginScreen = ({ history, location, match }) => {\n  const dispatch = useDispatch();\n  const {\n    alert: { alerts },\n  } = useSelector((state) => state);\n  const [loginInfo, setLoginInfo] = useState({ name: \"\", password: \"\" });\n\n  useEffect(() => {\n    if (localStorage.getItem(\"authToken\")) {\n      dispatch(getUser(localStorage.getItem(\"authToken\")));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /** handle email input */\n  const handleEmailInput = (e) => {\n    setLoginInfo({ ...loginInfo, email: e.target.value });\n  };\n\n  /** handle password input */\n  const handlePasswordInput = (e) => {\n    setLoginInfo({ ...loginInfo, password: e.target.value });\n  };\n\n  /** handle login submit */\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    /** posts login */\n    dispatch(loginUser(loginInfo, history, location, match));\n    // console.log(user.error);\n    console.log(\"location\", location);\n    console.log(\"match\", match);\n    /** go to \"/\" */\n    /** Better to do this inside the action-generator. */\n    // history.push(\"/\");\n  };\n  return (\n    <div>\n      <h1>SIGN IN</h1>\n      {alerts &&\n        alerts.map((alert, index) => (\n          <Alert variant={alert.variant} key={index}>\n            {alert.msg}\n          </Alert>\n        ))}\n      <Form onSubmit={handleLoginSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            onChange={handleEmailInput}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            onChange={handlePasswordInput}\n          ></Form.Control>\n        </Form.Group>\n        <Button variant=\"dark\" type=\"submit\" className=\"rounded-0\">\n          SIGN IN\n        </Button>\n      </Form>\n      <p>\n        New Customer? <Link to=\"/register\">Register</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","/home/kobin/Documents/coding/eShop/client/src/screens/CartScreen.js",[],"/home/kobin/Documents/coding/eShop/client/src/screens/ProfileScreen.js",["187"],"import React from \"react\";\nimport { Alert, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAlert } from \"../actions/alertAction\";\nimport { registerUser, updateUserProfile } from \"../actions/authAction\";\nimport Profile from \"../components/Profile\";\n\nconst ProfileScreen = ({ history }) => {\n  const {\n    alert: { alerts },\n    authUser,\n  } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  /** handle submit */\n  /** this is how to pass multiple parameters with 'e' object */\n  const handleSubmit = ({ name, email, password, confirmPassword }) => {\n    // const { name, email, password } = registrationInfo;\n    if (password === confirmPassword) {\n      /** post update */\n\n      dispatch(updateUserProfile(name, email, password, authUser.user.token));\n      /** go to \"/\" */\n      // console.log({ name, email, password });\n    } else {\n      dispatch(setAlert(\"passwords does not match\", \"danger\"));\n    }\n  };\n\n  return (\n    <Row>\n      <Col xs={12} lg={4}>\n        <h1>USER PROFILE</h1>\n        {alerts &&\n          alerts.map((alert, index) => (\n            <Alert key={index} variant={alert.variant}>\n              {alert.msg}\n            </Alert>\n          ))}\n        <Profile handleSubmit={handleSubmit} componentType=\"UPDATE\" />\n      </Col>\n      <Col></Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/home/kobin/Documents/coding/eShop/client/src/components/Header.js",["188","189","190"],"import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Nav, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOGOUT_USER } from \"../constants/type\";\nimport { Fragment } from \"react\";\nimport { red } from \"colors\";\n// import history from \"../history/history\";\nconst Header = ({ history }) => {\n  const dispatch = useDispatch();\n  const {\n    authUser: { user },\n  } = useSelector((state) => state);\n  // const user = localStorage.getItem(\"userInfo\")\n  //   ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  //   : authUser.user;\n\n  /** handle logout */\n  const handleLogout = (params) => {\n    localStorage.removeItem(\"userInfo\");\n    console.log(\"history\", history);\n    dispatch({ type: LOGOUT_USER });\n    // history.push(\"/\");\n  };\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"p-3\">\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <span className=\"pr-2\">\n                <i className=\"fas fa-book-reader fa-lg\"></i>\n              </span>\n              <span className=\"text-lowercase\">bookstore</span>\n              <i className=\"fab fa-etsy\"></i>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link className=\"d-flex align-items-center\">\n                  <i className=\"fas fa-shopping-cart fa-2x pr-1 \"></i> CART\n                </Nav.Link>\n              </LinkContainer>\n              {/* /** SOMETHINGS UP WHEN WE LOGOUT , try aroung with 'user' */}\n              {!user.name ? (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link className=\"d-flex align-items-center\">\n                    <i className=\"fas fa-user fa-2x pr-1\"></i> SIGN-IN\n                  </Nav.Link>\n                </LinkContainer>\n              ) : (\n                <NavDropdown\n                  title={user && user.name}\n                  id=\"basic-nav-dropdown\"\n                  className=\"d-flex align-items-center\"\n                >\n                  <LinkContainer\n                    to=\"/profile\"\n                    activeClassName=\"\"\n                    activeStyle={\n                      {\n                        // backgroundColor: \"blue\",\n                      }\n                    }\n                  >\n                    <NavDropdown.Item>profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/\" activeClassName=\"\">\n                    <NavDropdown.Item onClick={handleLogout}>\n                      logout\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                  {/* <LinkContainer to=\"/cart\">\n                    <NavDropdown.Item>Trial</NavDropdown.Item>\n                  </LinkContainer> */}\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","/home/kobin/Documents/coding/eShop/client/src/screens/PaymentScreen.js",["191"],"import React, { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { Button, Col, Form, FormGroup } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { savePaymentMethod } from \"../actions/cartAction\";\nimport CheckoutSteps from \"./CheckoutSteps\";\n\nconst PaymentScreen = () => {\n  /** shipping address */\n  const { shippingAddress, paymentMethod: savedPaymentMethod } = useSelector(\n    (state) => state.cart\n  );\n  const history = useHistory();\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n\n  /** payment-method */\n  const [paymentMethod, setPaymentMethod] = useState(savedPaymentMethod);\n  /** handle radio check select */\n  const handleRadioSelect = (e) => {\n    setPaymentMethod(e.target.value);\n  };\n\n  /** handle Form Submit */\n  const dispatch = useDispatch();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeOrder\");\n  };\n\n  return (\n    <Fragment>\n      <CheckoutSteps step1={false} step2={false} step3={false} />\n      <h1>PAYMENT METHOD</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"Paypal or credit card\"\n              name=\"paymentMethod\"\n              id=\"Paypal\"\n              value=\"Paypal\"\n              checked={paymentMethod === \"Paypal\" ? true : false}\n              onChange={handleRadioSelect}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Stripe\"\n              name=\"paymentMethod\"\n              id=\"Stripe\"\n              value=\"Stripe\"\n              checked={paymentMethod === \"Stripe\" ? true : false}\n              onChange={handleRadioSelect}\n            />\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\">CONTINUE</Button>\n      </Form>\n    </Fragment>\n  );\n};\n\nexport default PaymentScreen;\n","/home/kobin/Documents/coding/eShop/client/src/screens/Checkout.js",["192","193","194"],"import {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport CheckoutSteps from \"./CheckoutSteps\";\nimport LoginScreen from \"./LoginScreen\";\nimport PaymentScreen from \"./PaymentScreen\";\nimport ShippingScreen from \"./ShippingScreen\";\nimport store from \"../store/store\";\n\nconst Checkout = ({ match: { path } }) => {\n  const state = store.getState();\n  return (\n    <Fragment>\n      <Router>\n        <CheckoutSteps />\n        <Switch>\n          {/* <Route path=\"/\">\n            {state.authUser.user.token ? (\n              <Redirect to=\"/checkout/shipping\" />\n            ) : (\n              <LoginScreen />\n            )}\n          </Route>\n          {/* <Route path=\"/checkout/login\" component={LoginScreen} /> */}\n          <Route path={`${path}/shipping`} component={ShippingScreen} />\n          {/* <Route path={`${path}/login`} component={LoginScreen} /> */}\n          <Route path={`${path}/payment`} component={PaymentScreen} /> */}\n        </Switch>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default Checkout;\n","/home/kobin/Documents/coding/eShop/client/src/screens/PlaceOrderScreen.js",["195","196"],"import React, { useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Image,\n  ListGroup,\n  Row,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createOrder } from \"../actions/orderAction\";\nimport { LEAVE_ORDER_PAGE } from \"../constants/type\";\nimport CheckoutSteps from \"./CheckoutSteps\";\n\nconst PlaceOrderScreen = () => {\n  const {\n    authUser: {\n      user: { id },\n    },\n    cart,\n    cart: { cartItems, shippingAddress, paymentMethod },\n    order: { order, loading, success },\n    alert: { alerts },\n  } = useSelector((state) => state);\n  /** destrcuring shippingAddress */\n  const { address, city, postalCode, country } = shippingAddress;\n\n  /** order summary */\n  cart.itemsTotal = cartItems.reduce(\n    (sum, item) => sum + item.price * item.qty,\n    0\n  );\n\n  cart.shippingCharge = cartItems.itemsTotal > 300 ? 100 : 0;\n\n  cart.tax = Number((cart.itemsTotal * 0.15).toFixed(2));\n\n  cart.itemsNetTotal = cart.itemsTotal + cart.shippingCharge + cart.tax;\n\n  /** handle place order */\n  const dispatch = useDispatch();\n  const handlePlaceOrder = (params) => {\n    dispatch(\n      createOrder({\n        // user: id,\n        orderItems: cartItems,\n        shippingAddress,\n        paymentMethod,\n        // itemsTotal: cartItems.itemsTotal,\n        totalPrice: cart.itemsNetTotal,\n        taxPrice: cart.tax,\n        shippingPrice: cart.shippingCharge,\n        isPaid: false,\n        isDelivered: false,\n      })\n    );\n  };\n\n  /** */\n  const history = useHistory();\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n      dispatch({ type: LEAVE_ORDER_PAGE });\n    }\n  }, [success, history, order, dispatch]);\n\n  return (\n    <Fragment>\n      <CheckoutSteps step1={false} step2={false} step3={false} step4={false} />\n      {alerts &&\n        alerts.map((alert, index) => (\n          <Alert variant={alert.variant} key={index}>\n            {alert.msg}\n          </Alert>\n        ))}\n      <Row>\n        <Col sm={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>SHIPPING</h2>\n              <p>\n                Address: {address}, {city}, {postalCode}, {country}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>PAYMENT METHOD</h2>\n              <p>Method: {paymentMethod}</p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>ORDER ITEMS</h2>\n              {cartItems.length === 0 ? (\n                <Alert variant=\"warning\">You cart is empty</Alert>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cartItems.map((item, index) => (\n                    <ListGroup.Item key={index} className=\"p-2\">\n                      <Row>\n                        <Col sm={2}>\n                          <Image\n                            src={item.image}\n                            height={50}\n                            width={50}\n                            alt={item.name}\n                            fluid\n                          ></Image>\n                        </Col>\n                        <Col sm={6}>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col sm={4} className=\"\">\n                          {item.qty} x $ {item.price} = ${\" \"}\n                          {Number((item.qty * item.price).toFixed(2))}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col sm={4}>\n          <Card>\n            <Card.Body>\n              <Card.Title>ORDER SUMMARY</Card.Title>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>$ {cart.itemsTotal}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>$ {cart.shippingCharge}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>$ {cart.tax}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>$ {cart.itemsNetTotal}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  className=\"btn-block\"\n                  disabled={cartItems.length === 0}\n                  onClick={handlePlaceOrder}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default PlaceOrderScreen;\n","/home/kobin/Documents/coding/eShop/client/src/screens/ShippingScreen.js",[],"/home/kobin/Documents/coding/eShop/client/src/Route/PrivateRoute.js",["197","198","199"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Switch, NavLink, Link, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { authUser } = useSelector((state) => state);\n\n  // if (authUser.user.token) {\n  //   return <Route component={Component} {...rest} />;\n  // } else {\n  //   return <Redirect to=\"/login\" />;\n  // }\n\n  /** OR */\n  /** this wont work because we cannot pass props to the component\n   * Therefore use render\n   */\n  // return (\n  //   <Route {...rest}>\n  //     {authUser.user.token ? (\n  //       <Component {...props} />\n  //     ) : (\n  //       <Redirect to=\"/login\" />\n  //     )}\n  //   </Route>\n  // );\n\n  /** OR */\n  return (\n    <Route\n      {...rest}\n      /** render is required to pass the props to the component */\n      render={(props) =>\n        authUser.user.token ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n\n/** PrivateRoute should be preferred over  \"inline-route-protection\"\n * BECAUSE we cannot enjoy state updation in the later case.\n */\n","/home/kobin/Documents/coding/eShop/client/src/Route/PrivateRouteInside.js",["200","201","202"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Switch, NavLink, Link, Redirect } from \"react-router-dom\";\n\nexport const PrivateRouteInside = ({ component, ...props }) => {\n  const { authUser } = useSelector((state) => state);\n  if (authUser.user.token) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return <Route component={component} {...props} />;\n  }\n};\n\nexport default PrivateRouteInside;\n","/home/kobin/Documents/coding/eShop/client/src/screens/ProductScreen.js",["203"],"// import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  Col,\n  Row,\n  Image,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Spinner,\n  Alert,\n  Form,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n// import Product from \"../components/Product\";\nimport Rating from \"../components/Rating\";\nimport { getProduct } from \"../actions/productListAction\";\nimport { addToCart } from \"../actions/cartAction\";\n// import products from \"../products\";\nconst ProductScreen = ({ match: { params }, history }) => {\n  // const [product, setProduct] = useState({});\n  const dispatch = useDispatch();\n  const { product, loading, error } = useSelector((state) => state.product);\n  /** destructuring product */\n  // ??????????????????\n  // AND make a new reducer for product.\n  const {\n    image,\n    name,\n    rating,\n    numReviews,\n    _id,\n    price,\n    description,\n    countInStock,\n  } = product;\n  // console.log(\"productScreen\", product, params.id);\n  useEffect(() => {\n    // const fetchProduct = async () => {\n    //   const config = { method: \"get\", url: `/api/products/${params.id}` };\n    //   const { data } = await axios(config);\n    //   setProduct(data);\n    // };\n    // fetchProduct();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    dispatch(getProduct(params.id));\n    console.log(\"dispatch\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  /** quantity */\n  const [qty, setQty] = useState(1);\n  const handleSelectChange = (e) => {\n    setQty(e.target.value);\n  };\n  /** add to cart */\n  const handleAddToCart = (e) => {\n    history.push(`/cart/${params.id}?qty=${qty}`);\n    // ?qty=${qty} can be accessed by location.search\n  };\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3 py-3\">\n        <h5 className=\"mb-0\">go back</h5>\n      </Link>\n      {loading ? (\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n          <Spinner animation=\"border\" role=\"status\" className=\"mr-3\" />\n          Loading...\n        </div>\n      ) : error ? (\n        <Alert variant=\"danger\">{error.message}</Alert>\n      ) : (\n        <Row className=\"p-3\">\n          <Col lg={6} md={12} className=\"mb-md-3 mb-lg-0\">\n            <Image src={image} fluid className=\"w-100\" />\n          </Col>\n          <Col lg={3} md={6} xs={12} className=\"descript mt-2 mt-lg-0\">\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating rating={rating} reviews={numReviews} id={_id} />\n                {numReviews} reviews\n              </ListGroup.Item>\n              <ListGroup.Item>Price: ${price}</ListGroup.Item>\n              <ListGroupItem>Description: {description}</ListGroupItem>\n            </ListGroup>\n          </Col>\n          <Col lg={3} md={6} xs={8} className=\"cartinfo mt-2 mt-sm-4 mt-lg-0\">\n            <ListGroup>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Price:</Col>\n                  <Col>${price}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Status:</Col>\n                  <Col>{countInStock > 0 ? \"InStock\" : \"Out of Stock\"}</Col>\n                </Row>\n              </ListGroup.Item>\n              {countInStock > 0 && (\n                <ListGroup.Item>\n                  <Row>\n                    <Col className=\"d-flex align-items-center\">\n                      <Form.Label>Qty:</Form.Label>\n                    </Col>\n                    <Col className=\"pr-3 pr-sm-4 pr-md-4 pr-lg-1\">\n                      <Form.Control\n                        className=\"mr-5\"\n                        as=\"select\"\n                        onChange={handleSelectChange}\n                        // id=\"inlineFormCustomSelectPref\"\n                        size=\"sm\"\n                        custom\n                      >\n                        {[...Array(countInStock)].map((x, i) => (\n                          <option key={i} value={i + 1}>\n                            {i + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <Button\n                  className=\"btn-block btn-dark\"\n                  disabled={!countInStock}\n                  onClick={handleAddToCart}\n                >\n                  Add To Cart\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n// const findProduct = (products, id) => {\n//   return products.find((product) => id === product._id);\n// };\nexport default ProductScreen;\n","/home/kobin/Documents/coding/eShop/client/src/screens/OrderScreen.js",["204","205","206","207"],"import React, { useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Image,\n  ListGroup,\n  Row,\n  Spinner,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createOrder, getOrderById } from \"../actions/orderAction\";\n\nconst OrderScreen = ({ match: { params } }) => {\n  const {\n    orderGet: { orderById, loading, success },\n    alert: { alerts },\n  } = useSelector((state) => state);\n\n  /** destructuring orderById */\n  const {\n    user,\n    shippingAddress,\n    taxPrice,\n    shippingPrice,\n    totalPrice,\n    paymentMethod,\n    orderItems,\n    isPaid,\n    isDelivered,\n  } = orderById;\n  /** destrcuring shippingAddress */\n  const { address, city, postalCode, country } = shippingAddress || {\n    address: \"\",\n    city: \"\",\n    postalCode: \"\",\n    country: \"\",\n  };\n\n  /** handle place order */\n  const dispatch = useDispatch();\n\n  /** useEffect */\n  useEffect(() => {\n    dispatch(getOrderById(params.id));\n  }, []);\n  return (\n    <Fragment>\n      {/* {alerts &&\n        alerts.map((alert, index) => (\n          <Alert variant={alert.variant} key={index}>\n            {alert.msg}\n          </Alert>\n        ))} */}\n      <Row className=\"px-2 pt-4\">\n        <h3>ORDER {params.id}</h3>\n      </Row>\n      <Row>\n        {/* loading === false ? (success ? 'somponent' : 'alert') : 'spinner' */}\n        {loading === false ? (\n          success ? (\n            <Fragment>\n              <Col sm={8}>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h2>SHIPPING</h2>\n                    <p>\n                      Name: <span className=\"text-capitalize\">{user.name}</span>\n                    </p>\n                    <p>Email: {user.email}</p>\n                    <p>\n                      Address: {address}, {city}, {postalCode}, {country}\n                    </p>\n                    {!isDelivered && (\n                      <Alert variant=\"danger\">Not Delivered</Alert>\n                    )}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <h2>PAYMENT METHOD</h2>\n                    <p>Method: {paymentMethod}</p>\n                    {!isPaid && <Alert variant=\"danger\">Not Paid</Alert>}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <h2>ORDER ITEMS</h2>\n                    {orderItems.length === 0 ? (\n                      <Alert variant=\"warning\">You cart is empty</Alert>\n                    ) : (\n                      <ListGroup variant=\"flush\">\n                        {orderItems.map((item, index) => (\n                          <ListGroup.Item key={index} className=\"p-2\">\n                            <Row>\n                              <Col sm={2}>\n                                <Image\n                                  src={item.image}\n                                  height={50}\n                                  width={50}\n                                  alt={item.name}\n                                  fluid\n                                ></Image>\n                              </Col>\n                              <Col sm={6}>\n                                <Link to={`/product/${item.product}`}>\n                                  {item.name}\n                                </Link>\n                              </Col>\n                              <Col sm={4} className=\"\">\n                                {item.qty} x $ {item.price} = ${\" \"}\n                                {Number((item.qty * item.price).toFixed(2))}\n                              </Col>\n                            </Row>\n                          </ListGroup.Item>\n                        ))}\n                      </ListGroup>\n                    )}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n              <Col sm={4}>\n                <Card>\n                  <Card.Body>\n                    <Card.Title>ORDER SUMMARY</Card.Title>\n                  </Card.Body>\n                  <ListGroup className=\"list-group-flush\">\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Items</Col>\n                        <Col>\n                          ${\" \"}\n                          {orderItems.reduce(\n                            (acc, value) => acc + value.price * value.qty,\n                            0\n                          )}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Shipping</Col>\n                        <Col>$ {shippingPrice}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Tax</Col>\n                        <Col>$ {taxPrice}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Total</Col>\n                        <Col>$ {totalPrice}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n            </Fragment>\n          ) : (\n            alerts &&\n            alerts.map((alert, index) => (\n              <Alert variant={alert.variant} key={index}>\n                {alert.msg}\n              </Alert>\n            ))\n          )\n        ) : (\n          <div className=\"d-flex w-50 justify-content-center pt-3\">\n            <Spinner animation=\"border\" variant=\"dark\" />\n          </div>\n        )}\n        {/* {success ? \"component\" : \"loading\"} */}\n        {/* <div className=\"d-flex w-100 justify-content-center\">\n          <Spinner animation=\"border\" variant=\"dark\" className=\"\" />\n        </div> */}\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default OrderScreen;\n","/home/kobin/Documents/coding/eShop/client/src/components/Product.js",[],"/home/kobin/Documents/coding/eShop/client/src/components/Alert.js",[],"/home/kobin/Documents/coding/eShop/client/src/components/Profile.js",["208","209"],"import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../actions/authAction\";\n\nconst Profile = ({ handleSubmit, componentType }) => {\n  const { authUser } = useSelector((state) => state);\n  const [profileInfo, setProfileInfo] = useState({\n    name: authUser.user.name ? authUser.user.name : \"\",\n    email: authUser.user.email ? authUser.user.email : \"\",\n    // name: \"\",\n    // email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  /** destructuring profileInfo */\n  const { name, email, password, confirmPassword } = profileInfo;\n\n  /** handle input change */\n  const handleInputChange = (e) => {\n    setProfileInfo({\n      ...profileInfo,\n      [e.target.name]: e.target.value,\n    });\n  };\n  /** handleSubmit */\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    handleSubmit(profileInfo);\n  };\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Form.Group controlId=\"name\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleInputChange}\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group controlId=\"email\">\n        <Form.Label>Email Address</Form.Label>\n        <Form.Control\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          value={email}\n          onChange={handleInputChange}\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Enter password\"\n          value={password}\n          onChange={handleInputChange}\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group controlId=\"confirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control\n          name=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          value={confirmPassword}\n          onChange={handleInputChange}\n        ></Form.Control>\n      </Form.Group>\n      <Button type=\"submit\">{componentType}</Button>\n    </Form>\n  );\n};\n\nexport default Profile;\n","/home/kobin/Documents/coding/eShop/client/src/screens/CheckoutSteps.js",["210"],"import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst CheckoutSteps = ({\n  step1 = true,\n  step2 = true,\n  step3 = true,\n  step4 = true,\n}) => {\n  //   const { step1 };\n  return (\n    <Nav className=\"d-flex justify-content-center py-2\">\n      <Nav.Item>\n        {/* <LinkContainer to=\"/login\"> */}\n        {/* /** ????????????????????? make steps work ????????????????????? // */}\n        <Nav.Link disabled={step1} className=\"px-4\">\n          Sign In\n        </Nav.Link>\n        {/* </LinkContainer> */}\n      </Nav.Item>\n      <Nav.Item>\n        {/* <LinkContainer to=\"/shipping\"> */}\n        <Nav.Link disabled={step2} className=\"px-4\">\n          Shipping\n        </Nav.Link>\n        {/* </LinkContainer> */}\n      </Nav.Item>\n      <Nav.Item>\n        {/* <LinkContainer to=\"/payment\"> */}\n        <Nav.Link disabled={step3} className=\"px-4\">\n          Payment\n        </Nav.Link>\n        {/* </LinkContainer> */}\n      </Nav.Item>\n      <Nav.Item>\n        {/* <LinkContainer to=\"/placeOrder\"> */}\n        <Nav.Link disabled={step4} className=\"px-4\">\n          Place Order\n        </Nav.Link>\n        {/* </LinkContainer> */}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","/home/kobin/Documents/coding/eShop/client/src/components/Rating.js",[],"/home/kobin/Documents/coding/eShop/client/src/reducers/rootReducer.js",[],"/home/kobin/Documents/coding/eShop/client/src/actions/productListAction.js",[],"/home/kobin/Documents/coding/eShop/client/src/actions/cartAction.js",[],"/home/kobin/Documents/coding/eShop/client/src/actions/authAction.js",["211","212"],"import {\n  LOGIN_USER,\n  REGISTER_USER,\n  GET_USER,\n  USER_REQUEST_FAILED,\n  REQUEST_USER,\n  USER_AUTHENTICATED,\n  UPDATE_USER_PROFILE,\n  SET_ALERT,\n} from \"../constants/type\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alertAction\";\nimport { useParams } from \"react-router\";\n\nexport const registerUser = (name, email, password, history) => async (\n  dispatch\n) => {\n  dispatch({\n    type: REQUEST_USER,\n  });\n  try {\n    const config = {\n      url: \"/api/users/\",\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      data: { name, email, password },\n    };\n    const { data } = await axios(config);\n    dispatch({\n      type: REGISTER_USER,\n      payload: data,\n    });\n    dispatch({\n      type: USER_AUTHENTICATED,\n    });\n\n    /** go to \"/\" if authenticated */\n    history.push(\"/\");\n\n    /** set it in localstrage */\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.error(error);\n    // const errorMessage = error.response.data.message;\n    const errorMessages = error.response.data.errors;\n    dispatch({\n      type: USER_REQUEST_FAILED,\n      payload: errorMessages || [{ msg: error.message }],\n    });\n    errorMessages.forEach(({ msg }) => dispatch(setAlert(msg, \"danger\", 6000)));\n  }\n};\n\nexport const loginUser = (\n  { email, password },\n  history,\n  location,\n  match\n) => async (dispatch) => {\n  dispatch({\n    type: REQUEST_USER,\n  });\n  try {\n    const config = {\n      url: \"/api/users/login\",\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      data: { email, password },\n    };\n    const { data } = await axios(config);\n\n    dispatch({\n      type: LOGIN_USER,\n      payload: data,\n    });\n    dispatch({\n      type: USER_AUTHENTICATED,\n    });\n\n    /** go to \"/\" if authenticated */\n    // console.log(\"location\", location);\n    // console.log(\"match\", match);\n    history.push(\"/\");\n\n    /** set it in localstrage */\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.error(error);\n    // const errorMessage = error.response.data.message;\n    const errorMessages = error.response.data.errors;\n    errorMessages.forEach(({ msg }) => dispatch(setAlert(msg, \"danger\")));\n    dispatch({\n      type: USER_REQUEST_FAILED,\n      payload: errorMessages || [{ msg: error.message }],\n    });\n    // dispatch(setAlert(errorMessage, \"danger\"));\n  }\n};\n\nexport const getUser = (token) => async (dispatch) => {\n  try {\n    const config = {\n      url: \"/api/users/profile\",\n      method: \"get\",\n      header: { authorization: `Bearer ${token}` },\n    };\n    const payload = await axios(config);\n    dispatch({\n      type: GET_USER,\n      payload,\n    });\n  } catch (error) {\n    console.error(error);\n    const errorMessage = error.response.data.message;\n\n    dispatch({\n      type: USER_REQUEST_FAILED,\n      payload: errorMessage || [{ msg: error.message }],\n    });\n    dispatch(setAlert(errorMessage, \"danger\"));\n  }\n};\n\nexport const updateUserProfile = (name, email, password, token) => async (\n  dispatch\n) => {\n  dispatch({ type: REQUEST_USER });\n  console.log(\"updateProfile\");\n  try {\n    const config = {\n      method: \"put\",\n      url: \"/api/users/update\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`,\n      },\n      data: { name, email, password },\n    };\n    const { data } = await axios(config);\n    console.log(\"profileupdate\", data);\n\n    /** update user profie */\n    dispatch({\n      type: UPDATE_USER_PROFILE,\n      payload: data.user,\n    });\n\n    /** show updated alert */\n    dispatch(setAlert(data.msg, \"success\"));\n  } catch (error) {\n    console.error(error);\n    const errorMessages = error.response.data.errors;\n    errorMessages.forEach(({ msg }) => dispatch(setAlert(msg, \"danger\")));\n\n    dispatch({\n      type: USER_REQUEST_FAILED,\n      payload: errorMessages || [{ msg: error.message }],\n    });\n  }\n};\n","/home/kobin/Documents/coding/eShop/client/src/actions/alertAction.js",[],"/home/kobin/Documents/coding/eShop/client/src/actions/orderAction.js",["213"],"import axios from \"axios\";\nimport {\n  GET_ORDER_BY_ID,\n  GET_ORDER_FAIL,\n  GET_ORDER_REQUEST,\n  GET_ORDER_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n} from \"../constants/type\";\nimport { setAlert } from \"./alertAction\";\n\nexport const createOrder = (payload) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST });\n  const order = payload;\n  const {\n    authUser: {\n      user: { token },\n    },\n  } = getState();\n  try {\n    const config = {\n      url: \"/api/orders\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`,\n      },\n      data: order,\n    };\n\n    const { data } = await axios(config);\n    console.log(\"data-from-axios\", data);\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\n  } catch (error) {\n    console.error(error);\n    // const errorMessage = error.response.data.message;\n    const errorMessages = error.response.data.errors;\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: errorMessages || [{ msg: error.message }],\n    });\n    errorMessages.forEach(({ msg }) => dispatch(setAlert(msg, \"danger\", 6000)));\n  }\n};\n\nexport const getOrderById = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: GET_ORDER_REQUEST });\n  const {\n    authUser: {\n      user: { token },\n    },\n  } = getState();\n  try {\n    const config = {\n      url: `/api/orders/${orderId}`,\n      method: \"get\",\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    };\n    const { data } = await axios(config);\n\n    dispatch({\n      type: GET_ORDER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    console.error(error);\n    // const errorMessage = error.response.data.message;\n    const errorMessages = error.response.data.errors;\n    dispatch({\n      type: GET_ORDER_FAIL,\n      payload: errorMessages || [{ msg: error.message }],\n    });\n    errorMessages.forEach(({ msg }) => dispatch(setAlert(msg, \"danger\", 6000)));\n  }\n};\n","/home/kobin/Documents/coding/eShop/client/src/constants/type.js",[],"/home/kobin/Documents/coding/eShop/client/src/reducers/alertReducers.js",[],"/home/kobin/Documents/coding/eShop/client/src/reducers/authReducer.js",[],"/home/kobin/Documents/coding/eShop/client/src/reducers/productListReducer.js",[],"/home/kobin/Documents/coding/eShop/client/src/reducers/orderReducers.js",[],"/home/kobin/Documents/coding/eShop/client/src/reducers/cartReducer.js",[],"/home/kobin/Documents/coding/eShop/client/src/reducers/productReducer.js",[],"/home/kobin/Documents/coding/eShop/client/src/utils/starFiller.js",["214"],"import React from \"react\";\n\nconst startFiller = (rating) => {\n  let icons = [];\n  /** full-star */\n  for (let i = 0; i < Math.floor(rating); i++) {\n    icons.push(\"fa fa-star\");\n  }\n  if (rating - Math.floor(rating) >= 0.5) {\n    /** half-star */\n    icons.push(\"fas fa-star-half-alt\");\n    /** empty-star */\n    for (let i = 0; i < 5 - (Math.floor(rating) + 1); i++) {\n      icons.push(\"far fa-star\");\n    }\n  } else {\n    /** empty-star */\n    for (let i = 0; i < 5 - Math.floor(rating); i++) {\n      icons.push(\"far fa-star\");\n    }\n  }\n  return icons;\n};\n\nexport default startFiller;\n",{"ruleId":"215","severity":1,"message":"216","line":4,"column":3,"nodeType":"217","messageId":"218","endLine":4,"endColumn":11},{"ruleId":"215","severity":1,"message":"219","line":26,"column":8,"nodeType":"217","messageId":"218","endLine":26,"endColumn":16},{"ruleId":"215","severity":1,"message":"220","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"221","line":8,"column":10,"nodeType":"217","messageId":"218","endLine":8,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":45,"column":6,"nodeType":"224","endLine":45,"endColumn":8,"suggestions":"225"},{"ruleId":"215","severity":1,"message":"220","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"226","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":16},{"ruleId":"215","severity":1,"message":"227","line":3,"column":18,"nodeType":"217","messageId":"218","endLine":3,"endColumn":22},{"ruleId":"215","severity":1,"message":"228","line":3,"column":24,"nodeType":"217","messageId":"218","endLine":3,"endColumn":29},{"ruleId":"215","severity":1,"message":"229","line":12,"column":14,"nodeType":"217","messageId":"218","endLine":12,"endColumn":20},{"ruleId":"215","severity":1,"message":"230","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":20},{"ruleId":"215","severity":1,"message":"231","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":22},{"ruleId":"215","severity":1,"message":"232","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":14},{"ruleId":"215","severity":1,"message":"221","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":18},{"ruleId":"215","severity":1,"message":"233","line":10,"column":10,"nodeType":"217","messageId":"218","endLine":10,"endColumn":13},{"ruleId":"215","severity":1,"message":"234","line":3,"column":29,"nodeType":"217","messageId":"218","endLine":3,"endColumn":38},{"ruleId":"215","severity":1,"message":"216","line":3,"column":3,"nodeType":"217","messageId":"218","endLine":3,"endColumn":11},{"ruleId":"215","severity":1,"message":"235","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":19},{"ruleId":"215","severity":1,"message":"236","line":16,"column":9,"nodeType":"217","messageId":"218","endLine":16,"endColumn":14},{"ruleId":"215","severity":1,"message":"237","line":21,"column":15,"nodeType":"217","messageId":"218","endLine":21,"endColumn":17},{"ruleId":"215","severity":1,"message":"238","line":25,"column":21,"nodeType":"217","messageId":"218","endLine":25,"endColumn":28},{"ruleId":"215","severity":1,"message":"239","line":3,"column":17,"nodeType":"217","messageId":"218","endLine":3,"endColumn":23},{"ruleId":"215","severity":1,"message":"240","line":3,"column":25,"nodeType":"217","messageId":"218","endLine":3,"endColumn":32},{"ruleId":"215","severity":1,"message":"232","line":3,"column":34,"nodeType":"217","messageId":"218","endLine":3,"endColumn":38},{"ruleId":"215","severity":1,"message":"239","line":3,"column":17,"nodeType":"217","messageId":"218","endLine":3,"endColumn":23},{"ruleId":"215","severity":1,"message":"240","line":3,"column":25,"nodeType":"217","messageId":"218","endLine":3,"endColumn":32},{"ruleId":"215","severity":1,"message":"232","line":3,"column":34,"nodeType":"217","messageId":"218","endLine":3,"endColumn":38},{"ruleId":"215","severity":1,"message":"241","line":20,"column":10,"nodeType":"217","messageId":"218","endLine":20,"endColumn":19},{"ruleId":"215","severity":1,"message":"226","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":9},{"ruleId":"215","severity":1,"message":"242","line":14,"column":16,"nodeType":"217","messageId":"218","endLine":14,"endColumn":26},{"ruleId":"215","severity":1,"message":"243","line":15,"column":10,"nodeType":"217","messageId":"218","endLine":15,"endColumn":21},{"ruleId":"222","severity":1,"message":"244","line":49,"column":6,"nodeType":"224","endLine":49,"endColumn":8,"suggestions":"245"},{"ruleId":"215","severity":1,"message":"246","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":21},{"ruleId":"215","severity":1,"message":"231","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":22},{"ruleId":"215","severity":1,"message":"247","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":23},{"ruleId":"215","severity":1,"message":"248","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":12},{"ruleId":"215","severity":1,"message":"249","line":13,"column":10,"nodeType":"217","messageId":"218","endLine":13,"endColumn":19},{"ruleId":"215","severity":1,"message":"250","line":3,"column":3,"nodeType":"217","messageId":"218","endLine":3,"endColumn":18},{"ruleId":"215","severity":1,"message":"251","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Checkout' is defined but never used.","'useState' is defined but never used.","'Fragment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["252"],"'Button' is defined but never used.","'Form' is defined but never used.","'Alert' is defined but never used.","'alerts' is assigned a value but never used.","'AlertMessage' is defined but never used.","'registerUser' is defined but never used.","'Link' is defined but never used.","'red' is defined but never used.","'FormGroup' is defined but never used.","'LoginScreen' is defined but never used.","'state' is assigned a value but never used.","'id' is assigned a value but never used.","'loading' is assigned a value but never used.","'Switch' is defined but never used.","'NavLink' is defined but never used.","'addToCart' is defined but never used.","'useHistory' is defined but never used.","'createOrder' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["253"],"'useDispatch' is defined but never used.","'LinkContainer' is defined but never used.","'SET_ALERT' is defined but never used.","'useParams' is defined but never used.","'GET_ORDER_BY_ID' is defined but never used.","'React' is defined but never used.",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [dispatch]",{"range":"258","text":"259"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"260","text":"261"},[1524,1526],"[dispatch]",[1061,1063],"[dispatch, params.id]"]